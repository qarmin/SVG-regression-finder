[general]
folder_with_files_to_check = "/home/rafal/Desktop/SVG/SVG4BigPack/"
problematic_files_path = "/home/rafal/Desktop/SVG/ProblematicSVG/" # Where to store problematic files, in which conversion failed(e.g. due program crash)
timeout = 0 # TODO not working yet, use bigger value than 0 to enable timeout functionality, time in seconds
px_size_of_generated_file = 400
ignore_conversion_step = false # Ignore step with conversion files from svg to png, just compare files
ignore_similarity_checking_step = false # Useful to finding problems with generating files
ignore_thorvg_not_supported_items = true # Thorvg not supports files with text, filters
similarity = 10 # Bigger similiarity will show only broken files that are completelly different, looks that 0-100 is quite reasonable range
output_folder = "/home/rafal/Desktop/SVG/BrokenSVG" # Place where to save files(Input and output that show differences)
limit_files = 0 # Limit checked files, useful if you are just checking this, 0 will remove limit of checked files
remove_files_from_output_folder_at_start = true # Useful if you run app with different settings and you don't want to remove files one by one
debug_show_always_output = false # Allows to find broken files
return_error_when_finding_invalid_files = false # When finding invalid files(broken or problematic) app will close with status 1
remove_problematic_files_after_copying = false # Remove from output folder problematic svg files
remove_broken_files_after_copying = false # Remove from output folder broken svg files
remove_generated_png_files_at_end = true # Remove all png from input folder at end

[first_tool]
name = "thorvg"
path = "/home/rafal/test/thorvg/build/src/bin/svg2png/svg2png"
png_name_ending = "_thorvg.png"
arguments = "{FILE} -r {SIZE}x{SIZE}"

[other_tool]
name = "rsvg"
path = "rsvg-convert"
png_name_ending = "_rsvg.png"
arguments = "{FILE} -o {OUTPUT_FILE} -w {SIZE} -h {SIZE}"

#[other_tool]
#name = "resvg"
#path = "resvg"
#png_name_ending = "_resvg.png"
#arguments = "{FILE} {OUTPUT_FILE} -w {SIZE} -h {SIZE}"
#
#[other_tool]
#name = "inkscape"
#path = "inkscape"
#png_name_ending = "_inkscape.png"
#arguments = "{FILE} --export-type=png -w {SIZE} -h {SIZE}"
